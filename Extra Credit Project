import pygame
import random
import sys

# Initialize
pygame.init()
WIDTH, HEIGHT = 600, 600
SCREEN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Flappy Fish")
CLOCK = pygame.time.Clock()
FONT = pygame.font.SysFont("Arial", 30)

# Load background
BACKGROUND = pygame.image.load("background.png")
BACKGROUND = pygame.transform.scale(BACKGROUND, (WIDTH, HEIGHT))

# Load pipe image (seaweed/coral)
PIPE_IMG = pygame.image.load("pipe.png")
PIPE_WIDTH, PIPE_HEIGHT = 80, 250
PIPE_IMG = pygame.transform.scale(PIPE_IMG, (PIPE_WIDTH, PIPE_HEIGHT))

# Load characters
CHARACTERS = {
    "Fish #1": pygame.image.load("fish1.png"),
    "Fish #2": pygame.image.load("fish2.png"),
    "Fish #3": pygame.image.load("fish3.png"),
    "Fish #4": pygame.image.load("fish4.png")
}
for key in CHARACTERS:
    CHARACTERS[key] = pygame.transform.scale(CHARACTERS[key], (50, 50))

# Constants
PIPE_GAP = 200  # space between top and bottom pipe
PIPE_SPACING = 320  # distance between pipe pairs
GRAVITY = 0.3
JUMP_STRENGTH = -7

def select_character():
    selected = None
    while not selected:
        SCREEN.blit(BACKGROUND, (0, 0))
        title = FONT.render("Choose Your Sea Creature", True, (255, 255, 255))
        SCREEN.blit(title, (WIDTH // 2 - title.get_width() // 2, 50))

        spacing = 100
        start_x = WIDTH // 2 - (2 * spacing) + 10
        for i, (name, img) in enumerate(CHARACTERS.items()):
            x = start_x + i * spacing
            SCREEN.blit(img, (x, 150))

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit(); sys.exit()
            elif event.type == pygame.MOUSEBUTTONDOWN:
                mx, my = pygame.mouse.get_pos()
                for i, (name, img) in enumerate(CHARACTERS.items()):
                    x = start_x + i * spacing
                    rect = pygame.Rect(x, 150, 50, 50)
                    if rect.collidepoint(mx, my):
                        selected = name
        pygame.display.flip()
        CLOCK.tick(30)
    return CHARACTERS[selected]

def draw_pipe(pipe_rect, flip=False):
    pipe_img = pygame.transform.flip(PIPE_IMG, False, True) if flip else PIPE_IMG
    SCREEN.blit(pipe_img, (pipe_rect.x, pipe_rect.y if not flip else pipe_rect.bottom - PIPE_HEIGHT))

def game_over_menu(score):
    while True:
        SCREEN.blit(BACKGROUND, (0, 0))
        msg = FONT.render(f"Game Over! Score: {score}", True, (255, 255, 255))
        restart = FONT.render("Press R to Restart", True, (255, 255, 255))
        quit_msg = FONT.render("Press Q to Quit", True, (255, 255, 255))

        SCREEN.blit(msg, (WIDTH // 2 - msg.get_width() // 2, 200))
        SCREEN.blit(restart, (WIDTH // 2 - restart.get_width() // 2, 260))
        SCREEN.blit(quit_msg, (WIDTH // 2 - quit_msg.get_width() // 2, 300))

        pygame.display.flip()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit(); sys.exit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_r:
                    return True
                elif event.key == pygame.K_q:
                    pygame.quit(); sys.exit()

def spawn_pipe():
    # Create the top pipe
    top_height = random.randint(90, HEIGHT - PIPE_GAP - 90)
    top = pygame.Rect(WIDTH, 0, PIPE_WIDTH, top_height)

    # Create the bottom pipe
    bottom_y = top_height + PIPE_GAP
    bottom_height = HEIGHT - bottom_y + 50 
    bottom = pygame.Rect(WIDTH, bottom_y, PIPE_WIDTH, bottom_height)

    return top, bottom

def main(character_img):
    x, y = 100, HEIGHT // 2
    vel = 0
    score = 0
    pipes = []

    pipes.extend(spawn_pipe())
    running = True

    while running:
        CLOCK.tick(60)
        SCREEN.blit(BACKGROUND, (0, 0))

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit(); sys.exit()
            elif event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
                vel = JUMP_STRENGTH

        vel += GRAVITY
        y += vel

        for i in range(len(pipes)):
            pipes[i].x -= 3

        if pipes[-1].x < WIDTH - PIPE_SPACING:
            pipes.extend(spawn_pipe())

        if pipes[0].x < -PIPE_WIDTH:
            pipes.pop(0)
            pipes.pop(0)
            score += 1

        # Draw pipes
        for i in range(0, len(pipes), 2):
            draw_pipe(pipes[i], flip=True)
            draw_pipe(pipes[i + 1], flip=False)

        # Draw character
        SCREEN.blit(character_img, (x, y))

        char_hitbox = pygame.Rect(x + 15, y + 9, 20, 20)  
        for pipe in pipes:
            if char_hitbox.colliderect(pipe):
                running = False
        if y > HEIGHT or y < 0:
            running = False

        # Display score
        score_text = FONT.render(f"Score: {score}", True, (255, 255, 255))
        SCREEN.blit(score_text, (10, 10))
        pygame.display.flip()

    restart = game_over_menu(score)
    if restart:
        main(character_img)

# Start game
if __name__ == "__main__":
    selected_img = select_character()
    main(selected_img)
